<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Blog</title>
    <link>https://vramana.github.io/blog/</link>
    <description>Recent content on My Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Sep 2018 14:58:48 +0530</lastBuildDate>
    
	<atom:link href="https://vramana.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust Debugging Paper Cuts</title>
      <link>https://vramana.github.io/blog/rust-debugging/</link>
      <pubDate>Sun, 30 Sep 2018 14:58:48 +0530</pubDate>
      
      <guid>https://vramana.github.io/blog/rust-debugging/</guid>
      <description>These are some of the pain points I have felt while trying debug Rust code in GDB. Some of them may be already solved problems but I don&amp;rsquo;t know the solution yet.
Don&amp;rsquo;t step in to standard library source code
This is a major issue step accidentally into rust std source code. Then do next command for few times till get out of it. More generally it would be nice to have command that will omit stepping into a few selected crates.</description>
    </item>
    
    <item>
      <title>Codemods: Path to painless upgrades in Ember</title>
      <link>https://vramana.github.io/blog/2016/01/13/codemods-path-to-painless-updgrade-in-ember/</link>
      <pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://vramana.github.io/blog/2016/01/13/codemods-path-to-painless-updgrade-in-ember/</guid>
      <description>Note: This post assumes some knowledge of JS features from ES2015
This is blog post is continuation to the my other blog post on How to write a codemod
Introduction After I wrote my last blog post on How to write a codemod, I was searching for problems that I can use for this blog post to talk more about codemods and I remembered about a blog post complaining the Ember 2.</description>
    </item>
    
    <item>
      <title>How to write a codemod</title>
      <link>https://vramana.github.io/blog/2015/12/21/codemod-tutorial/</link>
      <pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://vramana.github.io/blog/2015/12/21/codemod-tutorial/</guid>
      <description>Note: This post assumes some knowledge of JS features from ES2015
If you don&amp;rsquo;t know what codemods are, go watch this talk by Christoph Pojer (cpojer). Codemods allow you to transform your code to make breaking changes but without breaking the code. Codemods take a JS file as input and turn them into Abstract Syntax Trees (AST) and apply transformations on this AST later converting them back to JS again.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ramana Venkata</title>
    <link>https://blog.vramana.com/</link>
    <description>Recent content on Ramana Venkata</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Feb 2023 11:03:26 +0530</lastBuildDate><atom:link href="https://blog.vramana.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Is Java Reflection Slow?</title>
      <link>https://blog.vramana.com/posts/reflection-benchmark/</link>
      <pubDate>Sat, 18 Feb 2023 11:03:26 +0530</pubDate>
      
      <guid>https://blog.vramana.com/posts/reflection-benchmark/</guid>
      <description>&lt;p&gt;I came across a piece of Java code written by my colleague which uses reflection in a hot code path. I read somewhere
that reflection is often slow and should not be used hot code paths. My first instinct was let&amp;rsquo;s benchmark this and understand
what kind of performance speedup we can get.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How I thought I speed eslint but I didn&#39;t</title>
      <link>https://blog.vramana.com/posts/eslint-speedup/</link>
      <pubDate>Wed, 08 Feb 2023 21:59:33 +0530</pubDate>
      
      <guid>https://blog.vramana.com/posts/eslint-speedup/</guid>
      <description>&lt;p&gt;Inspired by &lt;a href=&#34;https://marvinh.dev/blog/speeding-up-javascript-ecosystem/&#34;&gt;recent&lt;/a&gt; &lt;a href=&#34;https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-3/&#34;&gt;posts&lt;/a&gt; of Marvin Hagemeister, I want to understand performace on build
tools and linters on my work codebase. Although I didn&amp;rsquo;t ultimately find a speedup in eslint performance, I
degraded it, it was an interesting journey nonetheless. This is short version of my investigation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Running typescript app with pm2 and tsx</title>
      <link>https://blog.vramana.com/posts/2023-02-05-pm2-tsx/</link>
      <pubDate>Sat, 04 Feb 2023 21:59:33 +0530</pubDate>
      
      <guid>https://blog.vramana.com/posts/2023-02-05-pm2-tsx/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Short anatomy of node-redis client</title>
      <link>https://blog.vramana.com/posts/2022-06-25-short-anatomy-of-node-redis/</link>
      <pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.vramana.com/posts/2022-06-25-short-anatomy-of-node-redis/</guid>
      <description>&lt;p&gt;I am trying to write simple redis-client in rust. As part of that exercise, I have read the source code of
Node.js Redis Client. I want to jot down some notes on how it works.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My most used Terminal Commands</title>
      <link>https://blog.vramana.com/2019/02/20/terminal-commands/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.vramana.com/2019/02/20/terminal-commands/</guid>
      <description>&lt;p&gt;Inspired by &lt;a href=&#34;https://wincent.com/blog/frequently-used-terminal-commands&#34;&gt;this article&lt;/a&gt;, I set out to find which are my most used commands.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rust Debugging Paper Cuts</title>
      <link>https://blog.vramana.com/2018/09/30/rust-debugging/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.vramana.com/2018/09/30/rust-debugging/</guid>
      <description>&lt;p&gt;These are some of the pain points I have felt while trying debug Rust code in GDB. Some of them
may be already solved problems but I don&amp;rsquo;t know the solution yet.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Codemods: Path to painless upgrades in Ember</title>
      <link>https://blog.vramana.com/2016/01/13/codemods-path-to-painless-updgrade-in-ember/</link>
      <pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.vramana.com/2016/01/13/codemods-path-to-painless-updgrade-in-ember/</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: This post assumes some knowledge of JS features from ES2015&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is blog post is continuation to the my other blog post on &lt;a href=&#34;https://vramana.github.io/blog/2015/12/21/codemod-tutorial/&#34;&gt;How to write a codemod&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to write a codemod</title>
      <link>https://blog.vramana.com/2015/12/21/codemod-tutorial/</link>
      <pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.vramana.com/2015/12/21/codemod-tutorial/</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: This post assumes some knowledge of JS features from ES2015&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://blog.vramana.com/about/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://blog.vramana.com/about/</guid>
      <description>My name is Ramana Venkata. I am currently working as a software engineer on both front-end and back-end. In my current job, I am team lead for web application written React &amp;amp; Redux and bunch of microservices in Go.
My main interests are compilers, developer tools and low level graphics APIs.
Twitter
LinkedIn
Github</description>
    </item>
    
  </channel>
</rss>
